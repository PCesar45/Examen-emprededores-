/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package costos.receta;

import static costos.receta.interfazTotal.ingredientes;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author Pablo
 */
public class Modificar extends javax.swing.JFrame {

    /**
     * Creates new form Modificar
     */
    public static ArrayList<Ingrediente> ingredientes;
    public Modificar() {
        initComponents();
        ingredientes = new ArrayList<>();
        CargarListaIngredientes();
        actualizarcombobox();
    }
     static void actualizarcombobox(){
        System.out.println(interfazTotal.getIngredientes().size());
        cbox.removeAllItems();
        for (int i = 0; i < ingredientes.size(); i++) {
            cbox.addItem(ingredientes.get(i).getNombre());  
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Ingre = new javax.swing.JTextField();
        Unidad = new javax.swing.JTextField();
        Costo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingrediente:");

        jLabel2.setText("Unidad de medida:");

        jLabel3.setText("Costo por unidad");

        Ingre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngreActionPerformed(evt);
            }
        });

        Unidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnidadActionPerformed(evt);
            }
        });

        jLabel4.setText("Ingrediente:");

        cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxActionPerformed(evt);
            }
        });

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Costo, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Unidad, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(51, 51, 51)
                        .addComponent(Ingre, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbox, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Ingre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Costo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IngreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IngreActionPerformed

    private void UnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnidadActionPerformed

    }//GEN-LAST:event_UnidadActionPerformed
    void Guardar_en_el_archivo(String texto){
        //Si el ejecutable no sirve posiblemente es aca
        String rutaArchivo ="src/costos/receta/Archivos/Ingredientes.txt";
        //para que lo guarde tambien en el build
        String rutaArchivo2 ="build/classes/costos/receta/Archivos/Ingredientes.txt";
        try {
            // Crear un objeto FileWriter con la opción de añadir al final del archivo
            FileWriter fileWriter = new FileWriter(rutaArchivo, true);
            FileWriter fileWriter2 = new FileWriter(rutaArchivo2, true);
            // Crear un objeto BufferedWriter para escribir en el archivo
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            BufferedWriter bufferedWriter2 = new BufferedWriter(fileWriter2);

            // Escribir en el archivo
            bufferedWriter.write(texto);
            bufferedWriter2.write(texto);

            // Cerrar el BufferedWriter
            bufferedWriter.close();
            bufferedWriter2.close();

            System.out.println("Texto agregado al final del archivo.");
        } catch (IOException e) {
            System.out.println("Error al escribir en el archivo: " + e.getMessage());
        }
        
        
    }
   
    public void BorrarContenidoArchivo(String rutaArchivo) {


        try {
            // Abrir el archivo en modo de escritura (esto eliminará su contenido)
            FileWriter fileWriter = new FileWriter(rutaArchivo);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);

            // Cerrar el BufferedWriter
            bufferedWriter.close();

            System.out.println("Contenido del archivo borrado.");
        } catch (IOException e) {
            System.out.println("Error al borrar el contenido del archivo: " + e.getMessage());
        }
    }

    void guardarInfoNueva(){
        for (int i = 0; i < ingredientes.size(); i++) {
            String ingredient=ingredientes.get(i).getNombre()+","+String.valueOf(ingredientes.get(i).getCostoPorUnidad())+","+ingredientes.get(i).getUnidad()+"\n";
            Guardar_en_el_archivo(ingredient);
            
        }
    }
    private void cboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxActionPerformed

        Ingrediente seleccionado;
        if(cbox.getSelectedItem()!=null){
            seleccionado=buscarIng(cbox.getSelectedItem().toString());
            Unidad.setText(seleccionado.getUnidad());
            Costo.setText(String.valueOf(seleccionado.getCostoPorUnidad()));
            Ingre.setText(seleccionado.getNombre());
        }

    }//GEN-LAST:event_cboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Ingrediente seleccionado;
        seleccionado=buscarIng(cbox.getSelectedItem().toString());
        seleccionado.setNombre(Ingre.getText());
        seleccionado.setCostoPorUnidad(Double.parseDouble(Costo.getText()));
        seleccionado.setUnidad(Unidad.getText());
         String rutaArchivo ="src/costos/receta/Archivos/Ingredientes.txt";
        //para que lo guarde tambien en el build
        String rutaArchivo2 ="build/classes/costos/receta/Archivos/Ingredientes.txt";
        BorrarContenidoArchivo(rutaArchivo);
        BorrarContenidoArchivo(rutaArchivo2);
        guardarInfoNueva();
        interfazTotal.getIngredientes().clear();
        interfazTotal.CargarListaIngredientes();
        interfazTotal.actualizarcombobox();
        actualizarcombobox();
    }//GEN-LAST:event_jButton1ActionPerformed
public static void CargarListaIngredientes(){
        System.out.println(interfazTotal.getIngredientes().size());
        try (Scanner myReader = new Scanner(interfazTotal.class.getResourceAsStream("Archivos/Ingredientes.txt"))) {
            while (myReader.hasNextLine()) {
                String Ing= myReader.nextLine();
                if(!"\n".equals(Ing)){
                    String[]IngSep=Ing.split(",");
                    ingredientes.add(new Ingrediente(IngSep[0],Double.parseDouble(IngSep[1]),IngSep[2]));
                }
               
            }
        }
    }
    public boolean isInteger(String cadena){
        boolean contieneSoloNumeros = true;
        for (char c : cadena.toCharArray()) {
            if (!Character.isDigit(c)) {
                contieneSoloNumeros = false;
                break;
            }
        }
        return contieneSoloNumeros;
    }
    Ingrediente buscarIng(String nombre){
         for (int i = 0; i < ingredientes.size(); i++) {
            if(nombre.equals(ingredientes.get(i).getNombre())){
                return ingredientes.get(i);
            }
        }
         return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modificar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Costo;
    private javax.swing.JTextField Ingre;
    private javax.swing.JTextField Unidad;
    private static javax.swing.JComboBox<String> cbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
